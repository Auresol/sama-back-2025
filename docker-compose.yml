services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sama-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-sama_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - sama-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-sama_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Sama Backend Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sama-backend
    environment:
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_NAME: ${DB_NAME:-sama_db}
      DB_SSLMODE: disable
      
      # Server Configuration
      SERVER_PORT: 8080
      SERVER_MODE: ${SERVER_MODE:-debug}
      
      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-here}
      JWT_EXPIRY: ${JWT_EXPIRY:-24h}
      
      # Logging Configuration
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "8080:8080"
      - "8083:8083"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sama-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # # Logdy Core - Log Aggregation and Visualization
  # logdy:
  #   build:
  #     # may want to pin to a commit
  #     context: https://github.com/logdyhq/logdy-core.git
  #   container_name: sama-logdy
  #   ports:
  #     - "8081:8081"
  #   volumes:
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro`
  #   depends_on:
  #     - app
  #   networks:
  #     - sama-network
  #   command: 
  #     - "follow"
  #     - "/var/lib/docker/containers/*/*-json.log"
  #   # security_opt:
  #   #   - no-new-privileges=true

volumes:
  postgres_data:
    driver: local

networks:
  sama-network:
    driver: bridge
